name: PRODDeploy
 
env: 
  PHP_VERSION: '8.x'        
  CI : false
on:
  push:
    branches:
      - main
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:   
      - name: Setup PHP        
        uses: actions/checkout@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
 
      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: 'composer.json'
 
      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress
      - name: installing zip
        run: sudo apt install zip unzip
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php_app
          path: release.zip

  
  deploy:
    needs: build
    runs-on: runner1
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: php_app  # replace with your artifact name

    - name: Copy Files to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASS }}
        source: "release.zip"
        target: "/home/sumanth.n/prod"

    - name: Execute Deployment Commands Over SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASS }}
        script: |
          cd /home/sumanth.n/prod
          unzip release.zip
          

 
         
